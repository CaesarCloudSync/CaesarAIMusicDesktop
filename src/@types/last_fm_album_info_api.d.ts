// Generated by https://quicktype.io

import { LastFMError } from './last_fm_api';
import { ParsedSimilarTrack } from './last_fm_similar_tracks_api';

export type LastFMAlbumInfoAPI =
  | {
      album: AlbumInfo;
    }
  | LastFMError;

interface ParsedAlbumTrack extends Omit<ParsedSimilarTrack, 'match'> {
  rank: number;
}

export interface LastFMAlbumInfo {
  sortedAvailAlbumTracks: ParsedAlbumTrack[];
  sortedAvailNonAlbumTracks: ParsedAlbumTrack[];
  sortedUnAvailAlbumTracks: ParsedAlbumTrack[];
  sortedAllAlbumTracks: ParsedAlbumTrack[];
  sortedAllTracks: ParsedAlbumTrack[];
  tags: Tag[];
  wiki?: string;
}

interface AlbumInfo {
  artist: string;
  mbid: string;
  tags: Tags;
  name: string;
  image: Image[];
  tracks: Tracks;
  listeners: string;
  playcount: string;
  url: string;
  wiki: Wiki;
}

type ParsedAlbumInfo = Omit<AlbumInfo, 'playcount' | 'listeners' | 'image'>;

interface Image {
  size: string;
  '#text': string;
}

interface Tags {
  tag: Tag[] | Tag;
}

interface Tag {
  url: string;
  name: string;
}

interface Tracks {
  track: Track | Track[];
}

interface Track {
  streamable: Streamable;
  duration: number;
  url: string;
  name: string;
  '@attr': Attr;
  artist: Artist;
}

interface Attr {
  rank: number;
}

interface Artist {
  url: string;
  name: string;
  mbid: string;
}

interface Streamable {
  fulltrack: string;
  '#text': string;
}

interface Wiki {
  published: string;
  summary: string;
  content: string;
}
